[
  {
    "command": "-workbench.action.togglePanel",
    "key": "cmd+j"
  },
  {
    "command": "workbench.action.togglePanel",
    "key": "ctrl+cmd+j"
  },
  {
    "command": "-workbench.action.switchWindow",
    "key": "ctrl+w"
  },
  {
    "command": "workbench.action.navigateBack",
    "key": "cmd+j -"
  },
  {
    "command": "workbench.action.navigateForward",
    "key": "cmd+j ="
  },
  {
    "command": "workbench.action.navigateToLastEditLocation",
    "key": "cmd+j \\"
  },
  {
    "command": "workbench.action.reloadWindow",
    "key": "cmd+j r"
  },
  {
    "command": "saveAll",
    "key": "cmd+j s"
  },
  {
    "command": "workbench.action.files.saveWithoutFormatting",
    "key": "cmd+j cmd+s"
  },
  {
    "command": "workbench.action.files.newUntitledFile",
    "key": "cmd+j n"
  },
  {
    "command": "workbench.action.newWindow",
    "key": "cmd+j shift+n"
  },
  {
    "command": "workbench.action.files.showOpenedFileInNewWindow",
    "key": "cmd+j o",
    "when": "emptyWorkspaceSupport"
  },
  {
    "command": "workbench.action.duplicateWorkspaceInNewWindow",
    "key": "cmd+j d",
    "when": "emptyWorkspaceSupport"
  },
  {
    "command": "workbench.action.switchWindow",
    "key": "cmd+j e"
  },
  {
    "command": "workbench.action.pinEditor",
    "key": "cmd+j p",
    "when": "!activeEditorIsPinned"
  },
  {
    "command": "workbench.action.unpinEditor",
    "key": "cmd+j p",
    "when": "activeEditorIsPinned"
  },
  {
    "command": "workbench.action.nextEditor",
    "key": "cmd+j tab"
  },
  {
    "command": "workbench.action.previousEditor",
    "key": "cmd+j shift+tab"
  },
  {
    "command": "workbench.action.closeActiveEditor",
    "key": "cmd+j w"
  },
  {
    "command": "workbench.action.closeGroup",
    "key": "cmd+j w",
    "when": "activeEditorGroupEmpty && multipleEditorGroups"
  },
  {
    "command": "workbench.action.closeEditorsInGroup",
    "key": "cmd+j shift+w"
  },
  {
    "command": "workbench.action.closeOtherEditors",
    "key": "cmd+j t"
  },
  {
    "command": "workbench.action.closeUnmodifiedEditors",
    "key": "cmd+j u"
  },
  {
    "command": "workbench.action.closeAllEditors",
    "key": "cmd+j q"
  },
  {
    "command": "workbench.action.closeAllGroups",
    "key": "cmd+j a"
  },
  {
    "command": "workbench.action.mergeAllWindowTabs",
    "key": "cmd+j m"
  },
  {
    "command": "workbench.action.splitEditor",
    "key": "cmd+j v"
  },
  {
    "command": "workbench.action.splitEditorOrthogonal",
    "key": "cmd+j shift+v"
  },
  {
    "command": "workbench.action.focusLeftGroup",
    "key": "cmd+j h"
  },
  {
    "command": "workbench.action.focusBelowGroup",
    "key": "cmd+j j"
  },
  {
    "command": "workbench.action.focusAboveGroup",
    "key": "cmd+j k"
  },
  {
    "command": "workbench.action.focusRightGroup",
    "key": "cmd+j l"
  },
  {
    "command": "workbench.action.moveEditorToLeftGroup",
    "key": "cmd+j shift+h"
  },
  {
    "command": "workbench.action.moveEditorToBelowGroup",
    "key": "cmd+j shift+j"
  },
  {
    "command": "workbench.action.moveEditorToAboveGroup",
    "key": "cmd+j shift+k"
  },
  {
    "command": "workbench.action.moveEditorToRightGroup",
    "key": "cmd+j shift+l"
  },
  {
    "command": "workbench.action.splitEditorLeft",
    "key": "cmd+j cmd+h"
  },
  {
    "command": "workbench.action.splitEditorDown",
    "key": "cmd+j cmd+j"
  },
  {
    "command": "workbench.action.splitEditorUp",
    "key": "cmd+j cmd+k"
  },
  {
    "command": "workbench.action.splitEditorRight",
    "key": "cmd+j cmd+l"
  },
  {
    "command": "workbench.action.moveActiveEditorGroupLeft",
    "key": "cmd+j ctrl+h"
  },
  {
    "command": "workbench.action.moveActiveEditorGroupDown",
    "key": "cmd+j ctrl+j"
  },
  {
    "command": "workbench.action.moveActiveEditorGroupUp",
    "key": "cmd+j ctrl+k"
  },
  {
    "command": "workbench.action.moveActiveEditorGroupRight",
    "key": "cmd+j ctrl+l"
  },
  {
    "command": "workbench.action.moveEditorLeftInGroup",
    "key": "cmd+j ctrl+p"
  },
  {
    "command": "workbench.action.moveEditorRightInGroup",
    "key": "cmd+j ctrl+n"
  },
  {
    "command": "list.collapse",
    "key": "h",
    "when": "listFocus && !inputFocus"
  },
  {
    "command": "list.collapseAll",
    "key": "shift+h",
    "when": "listFocus && !inputFocus"
  },
  {
    "command": "list.focusDown",
    "key": "j",
    "when": "listFocus && !inputFocus"
  },
  {
    "command": "list.expandSelectionDown",
    "key": "shift+j",
    "when": "listFocus && listSupportsMultiselect && !inputFocus"
  },
  {
    "command": "list.focusUp",
    "key": "k",
    "when": "listFocus && !inputFocus"
  },
  {
    "command": "list.expandSelectionUp",
    "key": "shift+k",
    "when": "listFocus && listSupportsMultiselect && !inputFocus"
  },
  {
    "command": "list.select",
    "key": "l",
    "when": "listFocus && !inputFocus"
  },
  {
    "command": "workbench.action.focusActiveEditorGroup",
    "key": "shift+l",
    "when": "sideBarFocus && !inputFocus"
  },
  {
    "command": "explorer.openToSide",
    "key": "cmd+k l",
    "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
  },
  {
    "command": "list.focusFirst",
    "key": "g g",
    "when": "listFocus && !inputFocus"
  },
  {
    "command": "list.focusLast",
    "key": "shift+g",
    "when": "listFocus && !inputFocus"
  },
  {
    "command": "list.focusPageDown",
    "key": "ctrl+d",
    "when": "listFocus && !inputFocus"
  },
  {
    "command": "list.focusPageUp",
    "key": "ctrl+u",
    "when": "listFocus && !inputFocus"
  },
  {
    "command": "list.selectAndPreserveFocus",
    "key": "enter",
    "when": "listFocus && !inputFocus"
  },
  {
    "command": "list.toggleSelection",
    "key": "space",
    "when": "listFocus && !inputFocus"
  },
  {
    "command": "-list.toggleSelection",
    "key": "shift+cmd+enter",
    "when": "listFocus && !inputFocus"
  },
  {
    "command": "list.toggleKeyboardNavigation",
    "key": "/",
    "when": "listFocus && !inputFocus && listSupportsKeyboardNavigation"
  },
  {
    "command": "renameFile",
    "key": "r",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "-renameFile",
    "key": "enter",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "explorer.openAndPassFocus",
    "key": "e",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "command": "list.toggleExpand",
    "key": "o",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "command": "-list.toggleExpand",
    "key": "space",
    "when": "listFocus && !inputFocus"
  },
  {
    "command": "explorer.newFile",
    "key": "a",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "command": "explorer.newFolder",
    "key": "shift+a",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "command": "moveFileToTrash",
    "key": "x",
    "when": "explorerResourceMoveableToTrash && explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "filesExplorer.cancelCut",
    "key": "escape",
    "when": "explorerResourceCut && explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "command": "filesExplorer.copy",
    "key": "y",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
  },
  {
    "command": "filesExplorer.cut",
    "key": "d",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "filesExplorer.paste",
    "key": "p",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "firstCompressedFolder",
    "key": "cmd+k shift+h",
    "when": "explorerViewletCompressedFocus && explorerViewletVisible && filesExplorerFocus && !explorerViewletCompressedFirstFocus && !inputFocus"
  },
  {
    "command": "lastCompressedFolder",
    "key": "cmd+k shift+l",
    "when": "explorerViewletCompressedFocus && explorerViewletVisible && filesExplorerFocus && !explorerViewletCompressedLastFocus && !inputFocus"
  },
  {
    "command": "-editor.action.nextMatchFindAction",
    "key": "cmd+g",
    "when": "editorFocus"
  },
  {
    "command": "-editor.action.previousMatchFindAction",
    "key": "shift+cmd+g",
    "when": "editorFocus"
  },
  {
    "command": "-workbench.action.terminal.findNext",
    "key": "cmd+g",
    "when": "terminalFindFocused && terminalProcessSupported || terminalFocus && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.terminal.findPrevious",
    "key": "shift+cmd+g",
    "when": "terminalFindFocused && terminalProcessSupported || terminalFocus && terminalProcessSupported"
  },
  {
    "command": "workbench.view.scm",
    "key": "cmd+g g",
    "when": "workbench.scm.active"
  },
  {
    "command": "git.commitStaged",
    "key": "cmd+g c",
    "when": "workbench.scm.active"
  },
  {
    "command": "git.undoCommit",
    "key": "cmd+g u",
    "when": "workbench.scm.active"
  },
  {
    "command": "git.pull",
    "key": "cmd+g j",
    "when": "workbench.scm.active"
  },
  {
    "command": "git.push",
    "key": "cmd+g k",
    "when": "workbench.scm.active"
  },
  {
    "command": "git.stageAll",
    "key": "cmd+g a",
    "when": "workbench.scm.active"
  },
  {
    "command": "git.unstageAll",
    "key": "cmd+g z",
    "when": "workbench.scm.active"
  },
  {
    "command": "git.stashIncludeUntracked",
    "key": "cmd+g x",
    "when": "workbench.scm.active"
  },
  {
    "command": "git.stashApplyLatest",
    "key": "cmd+g v",
    "when": "workbench.scm.active"
  },
  {
    "command": "git.stageSelectedRanges",
    "key": "cmd+g s",
    "when": "isInDiffEditor"
  },
  {
    "command": "git.unstageSelectedRanges",
    "key": "cmd+g d",
    "when": "isInDiffEditor"
  },
  {
    "command": "git.revertSelectedRanges",
    "key": "cmd+g r",
    "when": "isInDiffEditor"
  },
  {
    "command": "git.git.openFile",
    "key": "cmd+g o",
    "when": "isInDiffEditor"
  },
  {
    "command": "toggle.diff.renderSideBySide",
    "key": "cmd+g t",
    "when": "isInDiffEditor"
  },
  {
    "command": "merge-conflict.next",
    "key": "cmd+g n"
  },
  {
    "command": "merge-conflict.previous",
    "key": "cmd+g p"
  },
  {
    "command": "-editor.action.joinLines",
    "key": "ctrl+j",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "command": "editor.action.joinLines",
    "key": "ctrl+cmd+j",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "command": "-acceptAlternativeSelectedSuggestion",
    "key": "shift+tab",
    "when": "suggestWidgetVisible && textInputFocus && textInputFocus"
  },
  {
    "command": "insertPrevSuggestion",
    "key": "shift+;",
    "when": "hasOtherSuggestions && textInputFocus && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
  },
  {
    "command": "selectNextSuggestion",
    "key": "ctrl+j",
    "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  {
    "command": "selectNextSuggestion",
    "key": "tab",
    "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  {
    "command": "selectPrevSuggestion",
    "key": "ctrl+k",
    "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  {
    "command": "selectPrevSuggestion",
    "key": "shift+tab",
    "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  {
    "command": "workbench.action.quickOpenNavigateNext",
    "key": "ctrl+j",
    "when": "inQuickOpen"
  },
  {
    "command": "workbench.action.quickOpenNavigateNext",
    "key": "tab",
    "when": "inQuickOpen"
  },
  {
    "command": "workbench.action.quickOpenNavigatePrevious",
    "key": "ctrl+k",
    "when": "inQuickOpen"
  },
  {
    "command": "workbench.action.quickOpenNavigatePrevious",
    "key": "shift+tab",
    "when": "inQuickOpen"
  },
  {
    "command": "showNextParameterHint",
    "key": "ctrl+j",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "command": "showPrevParameterHint",
    "key": "ctrl+k",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "command": "-insertPrevSuggestion",
    "key": "shift+tab",
    "when": "hasOtherSuggestions && textInputFocus && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
  }
]
