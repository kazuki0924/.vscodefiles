{
  // Controls whether opened editors show as preview. Preview editors do not keep open and are reused until explicitly set to be kept open (e.g. via double click or editing) and show up with an italic font style.
  "workbench.editor.enablePreview": false,
  // Controls whether a top border is drawn on modified (dirty) editor tabs or not. This value is ignored when `workbench.editor.showTabs` is disabled.
  "workbench.editor.highlightModifiedTabs": true,
  // Controls if the number of opened editors should be limited or not. When enabled, less recently used editors that are not dirty will close to make space for newly opening editors.
  "workbench.editor.limit.enabled": true,
  // Controls if the limit of maximum opened editors should apply per editor group or across all editor groups.
  "workbench.editor.limit.perEditorGroup": true,
  // Controls the sizing of pinned editor tabs. Pinned tabs are sorted to the beginning of all opened tabs and typically do not close until unpinned. This value is ignored when `workbench.editor.showTabs` is disabled.
  //  - normal: A pinned tab inherits the look of non pinned tabs.
  //  - compact: A pinned tab will show in a compact form with only icon or first letter of the editor name.
  //  - shrink: A pinned tab shrinks to a compact fixed size showing parts of the editor name.
  "workbench.editor.pinnedTabSizing": "shrink",
  // Controls the sizing of editor tabs. This value is ignored when `workbench.editor.showTabs` is disabled.
  //  - fit: Always keep tabs large enough to show the full editor label.
  //  - shrink: Allow tabs to get smaller when the available space is not enough to show all tabs at once.
  "workbench.editor.tabSizing": "shrink",
  // Controls whether keyboard navigation in lists and trees is automatically triggered simply by typing. If set to `false`, keyboard navigation is only triggered when executing the `list.toggleKeyboardNavigation` command, for which you can assign a keyboard shortcut.
  "workbench.list.automaticKeyboardNavigation": false,
  // Controls the keyboard navigation style for lists and trees in the workbench. Can be simple, highlight and filter.
  //  - simple: Simple keyboard navigation focuses elements which match the keyboard input. Matching is done only on prefixes.
  //  - highlight: Highlight keyboard navigation highlights elements which match the keyboard input. Further up and down navigation will traverse only the highlighted elements.
  //  - filter: Filter keyboard navigation will filter out and hide all the elements which do not match the keyboard input.
  "workbench.list.keyboardNavigation": "filter",
  // Controls whether lists and trees have smooth scrolling.
  "workbench.list.smoothScrolling": true
}