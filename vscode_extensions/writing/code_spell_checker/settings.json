{
  // Enable / Disable allowing word compounds. true means 'arraylength' would be ok, false means it would not pass.
  "cSpell.allowCompoundWords": false,
  // Control which file schemas will be checked for spelling (VS Code must be restarted for this setting to take effect).
  "cSpell.allowedSchemas": [
    "file",
    "gist",
    "sftp",
    "untitled"
  ],
  // The limit in K-Characters to be checked in a file.
  "cSpell.checkLimit": 500,
  // Define custom dictionaries to be included by default for the folder.
  // If `addWords` is `true` words will be added to this dictionary.
  "cSpell.customFolderDictionaries": [],
  // Define custom dictionaries to be included by default for the user.
  // If `addWords` is `true` words will be added to this dictionary.
  "cSpell.customUserDictionaries": [],
  // Define custom dictionaries to be included by default for the workspace.
  // If `addWords` is `true` words will be added to this dictionary.
  "cSpell.customWorkspaceDictionaries": [],
  // Issues found by the spell checker are marked with a Diagnostic Severity Level. This affects the color of squiggle.
  "cSpell.diagnosticLevel": "Information",
  // List of dictionaries to use when checking files.
  "cSpell.dictionaries": [],
  // A List of Dictionary Definitions.
  "cSpell.dictionaryDefinitions": [],
  // Enable / Disable the spell checker.
  "cSpell.enabled": true,
  // Specify file types to spell check. Use `cSpell.enableFiletypes` to Enable / Disable checking files types.
  "cSpell.enabledLanguageIds": [
    "asciidoc",
    "c",
    "cpp",
    "csharp",
    "css",
    "git-commit",
    "go",
    "graphql",
    "handlebars",
    "haskell",
    "html",
    "jade",
    "java",
    "javascript",
    "javascriptreact",
    "json",
    "jsonc",
    "latex",
    "less",
    "markdown",
    "php",
    "plaintext",
    "python",
    "pug",
    "restructuredtext",
    "rust",
    "scala",
    "scss",
    "text",
    "typescript",
    "typescriptreact",
    "yaml",
    "yml"
  ],
  // Enable / Disable checking file types (languageIds).
  // These are in additional to the file types specified by `cSpell.enabledLanguageIds`.
  // To disable a language, prefix with `!` as in `!json`,
  // 
  // Example:
  // ```
  // jsonc       // enable checking for jsonc
  // !json       // disable checking for json
  // kotlin      // enable checking for kotlin
  // ```
  "cSpell.enableFiletypes": [],
  // Show Regular Expression Explorer
  "cSpell.experimental.enableRegexpView": false,
  // Use Rename when fixing spelling issues.
  "cSpell.fixSpellingWithRenameProvider": true,
  // Words to always be flagged as an error.
  "cSpell.flagWords": [],
  // Specify paths/files to ignore. (Supports Globs)
  "cSpell.ignorePaths": [
    "**/package-lock.json",
    "**/node_modules/**",
    "**/vscode-extension/**",
    "**/.git/objects/**",
    ".vscode",
    ".vscode-insiders"
  ],
  // List of regular expressions used to exclude the matching text from being checked.
  //  Example: "0x[a-f0-9]+" to skip 0x hex values.
  //  By default the flags are 'gim'.
  //  You can specify them like this:
  //  "/0x[A-F0-9]/g" to match only upper case hex numbers.
  //  Example to match email: "<?[\\w.\\-+]+@\\w+(\\.\\w+)+>?" 
  "cSpell.ignoreRegExpList": [],
  // A list of words to be ignored by the spell checker.
  "cSpell.ignoreWords": [],
  // List of paths of cspell.json files to import.
  "cSpell.import": [],
  // List of regular expressions used to include text to be spell checked.
  // By default, all text is checked.  Adding regular expresses to this list will limit the text to be spell checked to only text that matches any of the expressions in the list.
  // Logic: text to be checked = include - exclude
  // Note: Slashes need to be double: \\ because it is in a json string. 
  // Examples:
  // * ".*" -- include everything.
  // * "'(?:[^'\\n]|\\\\')*'" -- single quote strings. 
  // 
  "cSpell.includeRegExpList": [],
  // The Language locale to use when spell checking. "en" and "en-GB" are currently supported.
  "cSpell.language": "en",
  // Define settings on a per programming language basis.
  "cSpell.languageSettings": [],
  // Set the Debug Level for logging messages.
  "cSpell.logLevel": "Error",
  // The maximum number of times the same word can be flagged as an error in a file.
  "cSpell.maxDuplicateProblems": 5,
  // Controls the maximum number of spelling errors per document.
  "cSpell.maxNumberOfProblems": 100,
  // The minimum length of a word before checking it against a dictionary.
  "cSpell.minWordLength": 4,
  // Controls the number of suggestions shown.
  "cSpell.numSuggestions": 8,
  // Overrides to apply based upon the file path.
  "cSpell.overrides": [],
  // Defines a list of named regular expression patterns that can be used in exclusion or inclusion lists.
  "cSpell.patterns": [],
  // Show Spell Checker actions in Editor Context Menu
  "cSpell.showCommandsInEditorContextMenu": true,
  // Display the spell checker status on the status bar.
  "cSpell.showStatus": true,
  // Delay in ms after a document has changed before checking it for spelling errors.
  "cSpell.spellCheckDelayMs": 50,
  // User words to add to dictionary.  Should only be in the user settings.
  "cSpell.userWords": [],
  // Words to add to dictionary for a workspace.
  "cSpell.words": [],
  // Define the path to the workspace root folder in a multi-root workspace.
  // By default it is the first folder.
  // 
  // This is used to find the `cspell.json` file for the workspace.
  // 
  // Example: use the `client` folder
  // ```
  //      "cSpell.workspaceRootPath": "${workspaceFolder:client}"
  // ```
  "cSpell.workspaceRootPath": ""
}
